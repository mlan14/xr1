{
  "id": 3753,
  "name": "GalaxyBrain",
  "fragment": "#define tau 6.2831853\n\nprecision highp float;\nprecision highp int;\nuniform float time;\nuniform float Transparent_Warp_Speed1457897149712_60_speed;\nuniform float fadeAway;\nuniform vec3 Transparent_Warp_Speed1457897149712_60_color;\nuniform vec2 mouse;\nuniform vec2 Transparent_Warp_Speed1457897149712_60_resolution;\nuniform float uniformity;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 Cube_Edges1457897244708_130_color;\nuniform float Cube_Edges1457897244708_130_brightness;\nuniform float falloff;\nuniform float contrast;\nuniform float distortion;\nuniform float Noise_Ripples1567530145080_335_speed;\nuniform vec3 Noise_Ripples1567530145080_335_color;\nuniform float Noise_Ripples1567530145080_335_brightness;\nuniform sampler2D noiseImage;\nuniform vec2 Noise_Ripples1567530145080_335_resolution;\nuniform vec3 color1;\nuniform vec3 color2;\nvarying vec2 Transparent_Warp_Speed1457897149712_60_vUv;\nvarying vec3 Cube_Edges1457897244708_130_vPosition;\nvarying vec3 Cube_Edges1457897244708_130_vNormal;\nvarying vec2 Cube_Edges1457897244708_130_vUv;\nvarying vec2 Cube_Edges1457897244708_130_vUv2;\nvarying vec2 Noise_Ripples1567530145080_335_vUv;\nmat2 makem2(in float theta) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                float c = cos(theta);\n                                                                                                                                                                                                                                                                                                                                                                                float s = sin(theta);\n                                                                                                                                                                                                                                                                                                                                                                                return mat2(c, -s, s, c);\n                                                                                                                                                                                                                                                                                                                                                                            }\nfloat noise(in vec2 x) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                return texture2D(noiseImage, x * .01).x;\n                                                                                                                                                                                                                                                                                                                                                                            }\nfloat fbm(in vec2 p) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                float z = 2.;\n                                                                                                                                                                                                                                                                                                                                                                                float rz = 0.;\n                                                                                                                                                                                                                                                                                                                                                                                vec2 bp = p;\n                                                                                                                                                                                                                                                                                                                                                                                for (float i = 1.;\n i < 6.0; i++) \n                                                                                                                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                                                                                                                    rz += abs((noise(p) - 0.5) * 2.0) / z;\n                                                                                                                                                                                                                                                                                                                                                                                    z = z * 2.;\n                                                                                                                                                                                                                                                                                                                                                                                    p = p * 2.;\n                                                                                                                                                                                                                                                                                                                                                                                }\n                                                                                                                                                                                                                                                                                                                                                                                return rz;\n                                                                                                                                                                                                                                                                                                                                                                            }\nfloat dualfbm(in vec2 p) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec2 p2 = p * distortion;\n                                                                                                                                                                                                                                                                                                                                                                                vec2 basis = vec2(fbm(p2 - time * Noise_Ripples1567530145080_335_speed * 1.6), fbm(p2 + time * Noise_Ripples1567530145080_335_speed * 1.7));\n                                                                                                                                                                                                                                                                                                                                                                                basis = (basis - .5) * .2;\n                                                                                                                                                                                                                                                                                                                                                                                p += basis;\n                                                                                                                                                                                                                                                                                                                                                                                return fbm(p * makem2(time * Noise_Ripples1567530145080_335_speed * 0.2));\n                                                                                                                                                                                                                                                                                                                                                                            }\nvarying vec2 Vertical_2_Color_Graident1567530489165_578_vUv;\nvec4 Transparent_Warp_Speed1457897149712_60_main(void) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Transparent_Warp_Speed1457897149712_60_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                float t = time * Transparent_Warp_Speed1457897149712_60_speed;\n                                                                                                                                                                                                                                                                                                                                                                                vec2 position = (Transparent_Warp_Speed1457897149712_60_vUv.xy - Transparent_Warp_Speed1457897149712_60_resolution.xy * .5) / Transparent_Warp_Speed1457897149712_60_resolution.x;\n                                                                                                                                                                                                                                                                                                                                                                                float angle = atan(position.y, position.x) / (2. * 3.14159265359);\n                                                                                                                                                                                                                                                                                                                                                                                angle -= floor(angle);\n                                                                                                                                                                                                                                                                                                                                                                                float rad = length(position);\n                                                                                                                                                                                                                                                                                                                                                                                float angleFract = fract(angle * 256.);\n                                                                                                                                                                                                                                                                                                                                                                                float angleRnd = floor(angle * 256.) + 1.;\n                                                                                                                                                                                                                                                                                                                                                                                float angleRnd1 = fract(angleRnd * fract(angleRnd * .7235) * 45.1);\n                                                                                                                                                                                                                                                                                                                                                                                float angleRnd2 = fract(angleRnd * fract(angleRnd * .82657) * 13.724);\n                                                                                                                                                                                                                                                                                                                                                                                float t2 = t + angleRnd1 * uniformity;\n                                                                                                                                                                                                                                                                                                                                                                                float radDist = sqrt(angleRnd2);\n                                                                                                                                                                                                                                                                                                                                                                                float adist = radDist / rad * .1;\n                                                                                                                                                                                                                                                                                                                                                                                float dist = (t2 * .1 + adist);\n                                                                                                                                                                                                                                                                                                                                                                                dist = abs(fract(dist) - fadeAway);\n                                                                                                                                                                                                                                                                                                                                                                                float outputColor = (1.0 / (dist)) * cos(0.7 * sin(t)) * adist / radDist / 30.0;\n                                                                                                                                                                                                                                                                                                                                                                                angle = fract(angle + .61);\n                                                                                                                                                                                                                                                                                                                                                                                Transparent_Warp_Speed1457897149712_60_gl_FragColor = vec4(outputColor * Transparent_Warp_Speed1457897149712_60_color, outputColor);\n                                                                                                                                                                                                                                                                                                                                                                                return Transparent_Warp_Speed1457897149712_60_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Cube_Edges1457897244708_130_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Cube_Edges1457897244708_130_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec2 multiplier = pow(abs(Cube_Edges1457897244708_130_vUv - 0.5), vec2(falloff));\n                                                                                                                                                                                                                                                                                                                                                                                Cube_Edges1457897244708_130_gl_FragColor = vec4(Cube_Edges1457897244708_130_color * Cube_Edges1457897244708_130_brightness * length(multiplier), 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Cube_Edges1457897244708_130_gl_FragColor *= -0.5;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Noise_Ripples1567530145080_335_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Noise_Ripples1567530145080_335_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec2 p = (Noise_Ripples1567530145080_335_vUv.xy - 0.5) * Noise_Ripples1567530145080_335_resolution;\n                                                                                                                                                                                                                                                                                                                                                                                float rz = dualfbm(p);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 col = (Noise_Ripples1567530145080_335_color / rz) * Noise_Ripples1567530145080_335_brightness;\n                                                                                                                                                                                                                                                                                                                                                                                col = ((col - 0.5) * max(contrast, 0.0)) + 0.5;\n                                                                                                                                                                                                                                                                                                                                                                                Noise_Ripples1567530145080_335_gl_FragColor = vec4(col, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Noise_Ripples1567530145080_335_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Vertical_2_Color_Graident1567530489165_578_main(void) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Vertical_2_Color_Graident1567530489165_578_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 mixCol = mix(color2, color1, Vertical_2_Color_Graident1567530489165_578_vUv.y);\n                                                                                                                                                                                                                                                                                                                                                                                Vertical_2_Color_Graident1567530489165_578_gl_FragColor = vec4(mixCol, 1.);\n                                                                                                                                                                                                                                                                                                                                                                                return Vertical_2_Color_Graident1567530489165_578_gl_FragColor *= 0.3;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvoid main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                gl_FragColor = (Transparent_Warp_Speed1457897149712_60_main() + Noise_Ripples1567530145080_335_main() + Cube_Edges1457897244708_130_main());                                                                                                                                                                                                                                                                                                                                                                            }\n",
  "vertex": "precision highp float;\nprecision highp int;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform float time;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\nvarying vec3 Transparent_Warp_Speed1457897149712_60_vPosition;\nvarying vec3 Transparent_Warp_Speed1457897149712_60_vNormal;\nvarying vec2 Transparent_Warp_Speed1457897149712_60_vUv;\nvarying vec2 Transparent_Warp_Speed1457897149712_60_vUv2;\nvarying vec3 Cube_Edges1457897244708_130_vPosition;\nvarying vec3 Cube_Edges1457897244708_130_vNormal;\nvarying vec2 Cube_Edges1457897244708_130_vUv;\nvarying vec2 Cube_Edges1457897244708_130_vUv2;\nvarying vec3 Noise_Ripples1567530145080_335_vPosition;\nvarying vec3 Noise_Ripples1567530145080_335_vNormal;\nvarying vec2 Noise_Ripples1567530145080_335_vUv;\nvarying vec2 Noise_Ripples1567530145080_335_vUv2;\nvarying vec2 Vertical_2_Color_Graident1567530489165_578_vUv;\nvec4 Transparent_Warp_Speed1457897149712_60_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Transparent_Warp_Speed1457897149712_60_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                Transparent_Warp_Speed1457897149712_60_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                                                                Transparent_Warp_Speed1457897149712_60_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                                                                Transparent_Warp_Speed1457897149712_60_vUv2 = uv2;\n                                                                                                                                                                                                                                                                                                                                                                                Transparent_Warp_Speed1457897149712_60_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                                                                Transparent_Warp_Speed1457897149712_60_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Transparent_Warp_Speed1457897149712_60_gl_Position *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Cube_Edges1457897244708_130_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Cube_Edges1457897244708_130_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                Cube_Edges1457897244708_130_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                                                                Cube_Edges1457897244708_130_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                                                                Cube_Edges1457897244708_130_vUv2 = uv2;\n                                                                                                                                                                                                                                                                                                                                                                                Cube_Edges1457897244708_130_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                                                                Cube_Edges1457897244708_130_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Cube_Edges1457897244708_130_gl_Position *= -0.5;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Noise_Ripples1567530145080_335_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Noise_Ripples1567530145080_335_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                Noise_Ripples1567530145080_335_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                                                                Noise_Ripples1567530145080_335_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                                                                Noise_Ripples1567530145080_335_vUv2 = uv2;\n                                                                                                                                                                                                                                                                                                                                                                                Noise_Ripples1567530145080_335_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                                                                Noise_Ripples1567530145080_335_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Noise_Ripples1567530145080_335_gl_Position *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Vertical_2_Color_Graident1567530489165_578_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Vertical_2_Color_Graident1567530489165_578_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                Vertical_2_Color_Graident1567530489165_578_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                                                                Vertical_2_Color_Graident1567530489165_578_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Vertical_2_Color_Graident1567530489165_578_gl_Position *= 0.3;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvoid main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                gl_Position = Transparent_Warp_Speed1457897149712_60_main() + Cube_Edges1457897244708_130_main() + Noise_Ripples1567530145080_335_main() + Vertical_2_Color_Graident1567530489165_578_main();                                                                                                                                                                                                                                                                                                                                                                            }\n",
  "uniforms": {
    "cameraPosition": {
      "type": "v3",
      "glslType": "vec3"
    },
    "time": {
      "type": "f",
      "glslType": "float"
    },
    "mouse": {
      "value": {
        "x": 0.5,
        "y": 0.5
      },
      "type": "v2",
      "glslType": "vec2"
    },
    "fadeAway": {
      "value": "0.9",
      "type": "f",
      "glslType": "float"
    },
    "uniformity": {
      "value": "10",
      "type": "f",
      "glslType": "float"
    },
    "Transparent_Warp_Speed1457897149712_60_color": {
      "value": {
        "r": 0.09803921568627451,
        "g": 0.14901960784313725,
        "b": 0.792156862745098
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Transparent_Warp_Speed1457897149712_60_speed": {
      "value": ".1",
      "type": "f",
      "glslType": "float"
    },
    "Transparent_Warp_Speed1457897149712_60_resolution": {
      "value": {
        "x": 1,
        "y": 1
      },
      "type": "v2",
      "glslType": "vec2"
    },
    "falloff": {
      "value": "4.18104668",
      "type": "f",
      "glslType": "float"
    },
    "Cube_Edges1457897244708_130_color": {
      "value": {
        "r": 1,
        "g": 1,
        "b": 1
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Cube_Edges1457897244708_130_brightness": {
      "value": "0",
      "type": "f",
      "glslType": "float"
    },
    "noiseImage": {
      "value": null,
      "type": "t",
      "glslType": "sampler2D"
    },
    "distortion": {
      "value": "2",
      "type": "f",
      "glslType": "float"
    },
    "contrast": {
      "value": "1.5",
      "type": "f",
      "glslType": "float"
    },
    "Noise_Ripples1567530145080_335_speed": {
      "value": "0.02",
      "type": "f",
      "glslType": "float"
    },
    "Noise_Ripples1567530145080_335_color": {
      "value": {
        "r": 0.00392156862745098,
        "g": 0.1411764705882353,
        "b": 0.984313725490196
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Noise_Ripples1567530145080_335_brightness": {
      "value": "0.1",
      "type": "f",
      "glslType": "float"
    },
    "Noise_Ripples1567530145080_335_resolution": {
      "value": {
        "x": "2",
        "y": "2"
      },
      "type": "v2",
      "glslType": "vec2"
    },
    "color1": {
      "value": {
        "r": "1",
        "g": "1",
        "b": "1"
      },
      "type": "c",
      "glslType": "vec3"
    },
    "color2": {
      "value": {
        "r": 1,
        "g": 1,
        "b": 1
      },
      "type": "c",
      "glslType": "vec3"
    }
  },
  "url": "http://shaderfrog.com/app/view/3753",
  "user": {
    "username": "XCreation555",
    "url": "http://shaderfrog.com/app/profile/andrewray"
  }
}