{
  "id": 3045,
  "name": "Electric Fire Shader",
  "fragment": "#define PI 3.141592653589793238462643383279\n\nprecision highp float;\nprecision highp int;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform float time;\nuniform vec3 lightPosition;\nuniform sampler2D map;\nuniform vec3 diffuseColor;\nuniform vec3 specularColor;\nuniform float shininess;\nuniform vec2 scaleBias;\nuniform float speed;\nuniform float resolution;\nuniform vec3 color;\nuniform sampler2D image;\nuniform float Caustic_Image_Based1551693363507_1670_brightness;\nuniform sampler2D tExplosion;\nuniform float Fireball1551693363547_1673_brightness;\nvarying vec3 Parallax_Mapping1551693363477_1667_vPosition;\nvarying vec3 Parallax_Mapping1551693363477_1667_vNormal;\nvarying vec2 Parallax_Mapping1551693363477_1667_vUv;\nvarying vec2 vUv2;\nvarying vec3 tsPosition;\nvarying vec3 tsCameraPosition;\nvarying vec3 tsLightSource;\nvarying vec2 Caustic_Image_Based1551693363507_1670_vUv;\nvarying vec3 Caustic_Image_Based1551693363507_1670_vPosition;\nvarying vec3 Caustic_Image_Based1551693363507_1670_vNormal;\nvec3 lig = normalize(vec3(0.9, 0.35, -0.2));\nvarying float noise;\nfloat random(vec3 scale, float seed) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Parallax_Mapping1551693363477_1667_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Parallax_Mapping1551693363477_1667_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                float height = texture2D(map, Parallax_Mapping1551693363477_1667_vUv).a;\n                                                                                                                                                                                                                                                                                                                                                                                float v = height * scaleBias.r - scaleBias.g;\n                                                                                                                                                                                                                                                                                                                                                                                vec3 eye = normalize(tsCameraPosition);\n                                                                                                                                                                                                                                                                                                                                                                                vec2 newCoords = Parallax_Mapping1551693363477_1667_vUv + (eye.xy * v);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 color = vec3(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 normal = texture2D(map, newCoords).rgb * 2.0 - 1.0;\n                                                                                                                                                                                                                                                                                                                                                                                vec3 viewVector = normalize(tsCameraPosition - tsPosition);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 lightVector = normalize(tsLightSource - tsPosition);\n                                                                                                                                                                                                                                                                                                                                                                                float nxDir = max(0.0, dot(normal, lightVector));\n                                                                                                                                                                                                                                                                                                                                                                                float specularPower = 0.0;\n                                                                                                                                                                                                                                                                                                                                                                                if (nxDir != 0.0) \n                                                                                                                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                                                                                                                    vec3 halfVector = normalize(lightVector + viewVector);\n                                                                                                                                                                                                                                                                                                                                                                                    float nxHalf = max(0.0, dot(normal, halfVector));\n                                                                                                                                                                                                                                                                                                                                                                                    specularPower = pow(nxHalf, shininess);\n                                                                                                                                                                                                                                                                                                                                                                                }\n                                                                                                                                                                                                                                                                                                                                                                                 vec3 specular = specularColor * specularPower;\n                                                                                                                                                                                                                                                                                                                                                                                Parallax_Mapping1551693363477_1667_gl_FragColor = vec4((diffuseColor * nxDir) + specular, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Parallax_Mapping1551693363477_1667_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Caustic_Image_Based1551693363507_1670_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Caustic_Image_Based1551693363507_1670_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec2 uvMax = (2.0 * asin(sin(2.0 * PI * Caustic_Image_Based1551693363507_1670_vUv))) / PI;\n                                                                                                                                                                                                                                                                                                                                                                                vec2 position = Caustic_Image_Based1551693363507_1670_vUv * resolution;\n                                                                                                                                                                                                                                                                                                                                                                                vec3 nor = vec3(0.0, 1.0, 0.0);\n                                                                                                                                                                                                                                                                                                                                                                                float dif = max(dot(nor, lig), 0.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 pos = vec3(position.x, 0.0, position.y);\n                                                                                                                                                                                                                                                                                                                                                                                float timeScale = time * speed;\n                                                                                                                                                                                                                                                                                                                                                                                vec3 brdf = vec3(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                float cc = 0.55 * texture2D(image, 1.8 * 0.02 * pos.xz + 0.007 * timeScale * vec2(1.0, 0.0)).x;\n                                                                                                                                                                                                                                                                                                                                                                                cc += 0.25 * texture2D(image, 1.8 * 0.04 * pos.xz + 0.011 * timeScale * vec2(0.0, 1.0)).x;\n                                                                                                                                                                                                                                                                                                                                                                                cc += 0.10 * texture2D(image, 1.8 * 0.08 * pos.xz + 0.014 * timeScale * vec2(-1.0, -1.0)).x;\n                                                                                                                                                                                                                                                                                                                                                                                cc = 0.6 * (1.0 - smoothstep(0.0, 0.025, abs(cc - 0.4))) + 0.4 * (1.0 - smoothstep(0.0, 0.150, abs(cc - 0.4)));\n                                                                                                                                                                                                                                                                                                                                                                                vec3 col = color * cc;\n                                                                                                                                                                                                                                                                                                                                                                                Caustic_Image_Based1551693363507_1670_gl_FragColor = vec4(color * cc * Caustic_Image_Based1551693363507_1670_brightness, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Caustic_Image_Based1551693363507_1670_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Fireball1551693363547_1673_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Fireball1551693363547_1673_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                float offset = .01 * random(vec3(12.9898, 78.233, 0151.7182), 0.0);\n                                                                                                                                                                                                                                                                                                                                                                                float depth = 0.25;\n                                                                                                                                                                                                                                                                                                                                                                                vec2 tPos = vec2(0, (Fireball1551693363547_1673_brightness + depth) * noise + offset);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 color = texture2D(tExplosion, (Fireball1551693363547_1673_brightness - depth) - tPos);\n                                                                                                                                                                                                                                                                                                                                                                                Fireball1551693363547_1673_gl_FragColor = vec4(color.rgb, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Fireball1551693363547_1673_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvoid main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                gl_FragColor = (Parallax_Mapping1551693363477_1667_main() + Caustic_Image_Based1551693363507_1670_main() + Fireball1551693363547_1673_main());                                                                                                                                                                                                                                                                                                                                                                            }\n",
  "vertex": "precision highp float;\nprecision highp int;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 lightPosition;\nuniform vec3 cameraPosition;\nuniform float time;\nuniform float fireSpeed;\nuniform float pulseHeight;\nuniform float displacementHeight;\nuniform float turbulenceDetail;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\nattribute vec4 tangent;\nvarying vec3 Parallax_Mapping1551693363477_1667_vPosition;\nvarying vec3 Parallax_Mapping1551693363477_1667_vNormal;\nvarying vec2 Parallax_Mapping1551693363477_1667_vUv;\nvarying vec2 vUv2;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 tsPosition;\nvarying vec3 tsCameraPosition;\nvarying vec3 tsLightSource;\nvarying vec2 Caustic_Image_Based1551693363507_1670_vUv;\nvarying vec3 Caustic_Image_Based1551693363507_1670_vPosition;\nvarying vec3 Caustic_Image_Based1551693363507_1670_vNormal;\nvarying float noise;\nvec3 mod289(vec3 x) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                return x - floor(x * (1.0 / 289.0)) * 289.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 mod289(vec4 x) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                return x - floor(x * (1.0 / 289.0)) * 289.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 permute(vec4 x) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                return mod289(((x * 34.0) + 1.0) * x);\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 taylorInvSqrt(vec4 r) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                return 1.79284291400159 - 0.85373472095314 * r;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec3 fade(vec3 t) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n                                                                                                                                                                                                                                                                                                                                                                            }\nfloat cnoise(vec3 P) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec3 Pi0 = floor(P);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 Pi1 = Pi0 + vec3(1.0);\n                                                                                                                                                                                                                                                                                                                                                                                Pi0 = mod289(Pi0);\n                                                                                                                                                                                                                                                                                                                                                                                Pi1 = mod289(Pi1);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 Pf0 = fract(P);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 Pf1 = Pf0 - vec3(1.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 iy = vec4(Pi0.yy, Pi1.yy);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 iz0 = Pi0.zzzz;\n                                                                                                                                                                                                                                                                                                                                                                                vec4 iz1 = Pi1.zzzz;\n                                                                                                                                                                                                                                                                                                                                                                                vec4 ixy = permute(permute(ix) + iy);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 ixy0 = permute(ixy + iz0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 ixy1 = permute(ixy + iz1);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gx0 = ixy0 * (1.0 / 7.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n                                                                                                                                                                                                                                                                                                                                                                                gx0 = fract(gx0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 sz0 = step(gz0, vec4(0.0));\n                                                                                                                                                                                                                                                                                                                                                                                gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n                                                                                                                                                                                                                                                                                                                                                                                gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gx1 = ixy1 * (1.0 / 7.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n                                                                                                                                                                                                                                                                                                                                                                                gx1 = fract(gx1);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 sz1 = step(gz1, vec4(0.0));\n                                                                                                                                                                                                                                                                                                                                                                                gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n                                                                                                                                                                                                                                                                                                                                                                                gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n                                                                                                                                                                                                                                                                                                                                                                                g000 *= norm0.x;\n                                                                                                                                                                                                                                                                                                                                                                                g010 *= norm0.y;\n                                                                                                                                                                                                                                                                                                                                                                                g100 *= norm0.z;\n                                                                                                                                                                                                                                                                                                                                                                                g110 *= norm0.w;\n                                                                                                                                                                                                                                                                                                                                                                                vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n                                                                                                                                                                                                                                                                                                                                                                                g001 *= norm1.x;\n                                                                                                                                                                                                                                                                                                                                                                                g011 *= norm1.y;\n                                                                                                                                                                                                                                                                                                                                                                                g101 *= norm1.z;\n                                                                                                                                                                                                                                                                                                                                                                                g111 *= norm1.w;\n                                                                                                                                                                                                                                                                                                                                                                                float n000 = dot(g000, Pf0);\n                                                                                                                                                                                                                                                                                                                                                                                float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n                                                                                                                                                                                                                                                                                                                                                                                float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n                                                                                                                                                                                                                                                                                                                                                                                float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n                                                                                                                                                                                                                                                                                                                                                                                float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n                                                                                                                                                                                                                                                                                                                                                                                float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n                                                                                                                                                                                                                                                                                                                                                                                float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n                                                                                                                                                                                                                                                                                                                                                                                float n111 = dot(g111, Pf1);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 fade_xyz = fade(Pf0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n                                                                                                                                                                                                                                                                                                                                                                                vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n                                                                                                                                                                                                                                                                                                                                                                                float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n                                                                                                                                                                                                                                                                                                                                                                                return 2.2 * n_xyz;\n                                                                                                                                                                                                                                                                                                                                                                            }\nfloat pnoise(vec3 P, vec3 rep) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec3 Pi0 = mod(floor(P), rep);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 Pi1 = mod(Pi0 + vec3(1.0), rep);\n                                                                                                                                                                                                                                                                                                                                                                                Pi0 = mod289(Pi0);\n                                                                                                                                                                                                                                                                                                                                                                                Pi1 = mod289(Pi1);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 Pf0 = fract(P);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 Pf1 = Pf0 - vec3(1.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 iy = vec4(Pi0.yy, Pi1.yy);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 iz0 = Pi0.zzzz;\n                                                                                                                                                                                                                                                                                                                                                                                vec4 iz1 = Pi1.zzzz;\n                                                                                                                                                                                                                                                                                                                                                                                vec4 ixy = permute(permute(ix) + iy);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 ixy0 = permute(ixy + iz0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 ixy1 = permute(ixy + iz1);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gx0 = ixy0 * (1.0 / 7.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n                                                                                                                                                                                                                                                                                                                                                                                gx0 = fract(gx0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 sz0 = step(gz0, vec4(0.0));\n                                                                                                                                                                                                                                                                                                                                                                                gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n                                                                                                                                                                                                                                                                                                                                                                                gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gx1 = ixy1 * (1.0 / 7.0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n                                                                                                                                                                                                                                                                                                                                                                                gx1 = fract(gx1);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 sz1 = step(gz1, vec4(0.0));\n                                                                                                                                                                                                                                                                                                                                                                                gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n                                                                                                                                                                                                                                                                                                                                                                                gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n                                                                                                                                                                                                                                                                                                                                                                                g000 *= norm0.x;\n                                                                                                                                                                                                                                                                                                                                                                                g010 *= norm0.y;\n                                                                                                                                                                                                                                                                                                                                                                                g100 *= norm0.z;\n                                                                                                                                                                                                                                                                                                                                                                                g110 *= norm0.w;\n                                                                                                                                                                                                                                                                                                                                                                                vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n                                                                                                                                                                                                                                                                                                                                                                                g001 *= norm1.x;\n                                                                                                                                                                                                                                                                                                                                                                                g011 *= norm1.y;\n                                                                                                                                                                                                                                                                                                                                                                                g101 *= norm1.z;\n                                                                                                                                                                                                                                                                                                                                                                                g111 *= norm1.w;\n                                                                                                                                                                                                                                                                                                                                                                                float n000 = dot(g000, Pf0);\n                                                                                                                                                                                                                                                                                                                                                                                float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n                                                                                                                                                                                                                                                                                                                                                                                float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n                                                                                                                                                                                                                                                                                                                                                                                float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n                                                                                                                                                                                                                                                                                                                                                                                float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n                                                                                                                                                                                                                                                                                                                                                                                float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n                                                                                                                                                                                                                                                                                                                                                                                float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n                                                                                                                                                                                                                                                                                                                                                                                float n111 = dot(g111, Pf1);\n                                                                                                                                                                                                                                                                                                                                                                                vec3 fade_xyz = fade(Pf0);\n                                                                                                                                                                                                                                                                                                                                                                                vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n                                                                                                                                                                                                                                                                                                                                                                                vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n                                                                                                                                                                                                                                                                                                                                                                                float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n                                                                                                                                                                                                                                                                                                                                                                                return 2.2 * n_xyz;\n                                                                                                                                                                                                                                                                                                                                                                            }\nfloat turbulence(vec3 p) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                float t = -0.5;\n                                                                                                                                                                                                                                                                                                                                                                                for (float f = 1.0;\n f <= 10.0; f++) \n                                                                                                                                                                                                                                                                                                                                                                                {\n                                                                                                                                                                                                                                                                                                                                                                                    float power = pow(2.0, f);\n                                                                                                                                                                                                                                                                                                                                                                                    t += abs(pnoise(vec3(power * p), vec3(10.0, 10.0, 10.0)) / power);\n                                                                                                                                                                                                                                                                                                                                                                                }\n                                                                                                                                                                                                                                                                                                                                                                                return t;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Parallax_Mapping1551693363477_1667_main(void) \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Parallax_Mapping1551693363477_1667_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                Parallax_Mapping1551693363477_1667_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                                                                Parallax_Mapping1551693363477_1667_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                                                                Parallax_Mapping1551693363477_1667_vNormal = normalize(normal);\n                                                                                                                                                                                                                                                                                                                                                                                vTangent = normalize(tangent.xyz);\n                                                                                                                                                                                                                                                                                                                                                                                vBinormal = normalize(cross(Parallax_Mapping1551693363477_1667_vNormal, vTangent) * tangent.w);\n                                                                                                                                                                                                                                                                                                                                                                                mat3 TBNMatrix = mat3(vTangent, vBinormal, Parallax_Mapping1551693363477_1667_vNormal);\n                                                                                                                                                                                                                                                                                                                                                                                tsPosition = position * TBNMatrix;\n                                                                                                                                                                                                                                                                                                                                                                                tsCameraPosition = cameraPosition * TBNMatrix;\n                                                                                                                                                                                                                                                                                                                                                                                tsLightSource = lightPosition * TBNMatrix;\n                                                                                                                                                                                                                                                                                                                                                                                Parallax_Mapping1551693363477_1667_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Parallax_Mapping1551693363477_1667_gl_Position *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Caustic_Image_Based1551693363507_1670_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Caustic_Image_Based1551693363507_1670_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                Caustic_Image_Based1551693363507_1670_vUv = uv;\n                                                                                                                                                                                                                                                                                                                                                                                Caustic_Image_Based1551693363507_1670_vPosition = position;\n                                                                                                                                                                                                                                                                                                                                                                                Caustic_Image_Based1551693363507_1670_vNormal = normal;\n                                                                                                                                                                                                                                                                                                                                                                                Caustic_Image_Based1551693363507_1670_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Caustic_Image_Based1551693363507_1670_gl_Position *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvec4 Fireball1551693363547_1673_main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                vec4 Fireball1551693363547_1673_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                                                                                                                                                                                noise = -1.1 * turbulence(turbulenceDetail * normal + (time * fireSpeed));\n                                                                                                                                                                                                                                                                                                                                                                                float b = pulseHeight * pnoise(0.05 * position + vec3(1.0 * time), vec3(100.0));\n                                                                                                                                                                                                                                                                                                                                                                                float displacement = (0.0 - displacementHeight) * noise + b;\n                                                                                                                                                                                                                                                                                                                                                                                vec3 newPosition = position + normal * displacement;\n                                                                                                                                                                                                                                                                                                                                                                                Fireball1551693363547_1673_gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n                                                                                                                                                                                                                                                                                                                                                                                return Fireball1551693363547_1673_gl_Position *= 1.0;\n                                                                                                                                                                                                                                                                                                                                                                            }\nvoid main() \n                                                                                                                                                                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                                                                                                                                                                gl_Position = Parallax_Mapping1551693363477_1667_main() + Caustic_Image_Based1551693363507_1670_main() + Fireball1551693363547_1673_main();                                                                                                                                                                                                                                                                                                                                                                            }\n",
  "uniforms": {
    "map": {
      "value": null,
      "type": "t",
      "glslType": "sampler2D"
    },
    "diffuseColor": {
      "value": {
        "r": 0,
        "g": 0,
        "b": 0
      },
      "type": "c",
      "glslType": "vec3"
    },
    "specularColor": {
      "value": {
        "r": 1,
        "g": 1,
        "b": 1
      },
      "type": "c",
      "glslType": "vec3"
    },
    "shininess": {
      "value": "5",
      "type": "f",
      "glslType": "float"
    },
    "scaleBias": {
      "value": {
        "x": "0.04",
        "y": "0.001",
        "z": 0
      },
      "type": "v2",
      "glslType": "vec2"
    },
    "time": {
      "type": "f",
      "glslType": "float"
    },
    "Parallax_Mapping1551693363477_1667_lightPosition": {
      "value": {
        "x": -2.250772924574874,
        "y": -0.30231657720138044,
        "z": -1.9602616991488433
      },
      "type": "v3",
      "glslType": "vec3"
    },
    "speed": {
      "value": "0.2",
      "type": "f",
      "glslType": "float"
    },
    "resolution": {
      "value": "0.5",
      "type": "f",
      "glslType": "float"
    },
    "color": {
      "value": {
        "r": 1,
        "g": 1,
        "b": 1
      },
      "type": "c",
      "glslType": "vec3"
    },
    "image": {
      "value": null,
      "type": "t",
      "glslType": "sampler2D"
    },
    "Caustic_Image_Based1551693363507_1670_brightness": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "tExplosion": {
      "value": null,
      "type": "t",
      "glslType": "sampler2D"
    },
    "fireSpeed": {
      "value": "0.5",
      "type": "f",
      "glslType": "float"
    },
    "turbulenceDetail": {
      "value": "0.7",
      "type": "f",
      "glslType": "float"
    },
    "displacementHeight": {
      "value": "0.5",
      "type": "f",
      "glslType": "float"
    },
    "pulseHeight": {
      "value": 0,
      "type": "f",
      "glslType": "float"
    },
    "Fireball1551693363547_1673_brightness": {
      "value": "0.9",
      "type": "f",
      "glslType": "float"
    }
  },
  "url": "http://shaderfrog.com/app/view/3045",
  "user": {
    "username": "SirFizX",
    "url": "http://shaderfrog.com/app/profile/andrewray"
  }
}